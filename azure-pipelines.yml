# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  webAppName: 'SampleApp'
  serviceConnection: 'AzureLoadTestingRepros'
  azureSubscriptionId: '7d95e13f-b4ff-4faf-968f-9d00a305d316'
  loadTestResource: 'repro3648'
  loadTestResourceGroup: 'LoadTesting'
  location: 'EAST US'


stages:
- stage: Build
  displayName: Build 
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-latest

    steps:

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: LoadTest
  displayName: Load Test
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: LoadTest
    displayName: Load Test
    pool:
      vmImage: ubuntu-latest
    steps:
    
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(serviceConnection)
        subscriptionId: $(azureSubscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(loadTestResourceGroup)
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/ARMTemplate/template.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/ARMTemplate/parameters.json'
        overrideParameters: '-name $(loadTestResource) -location "$(location)"'
        deploymentMode: 'Incremental'    
    
    - task: AzureLoadTest@1
      inputs:
        azureSubscription: $(serviceConnection)
        loadTestConfigFile: 'SampleApp.yaml'
        resourceGroup: $(loadTestResourceGroup)
        loadTestResource: $(loadTestResource)
        env: |
          [
            {
            "name": "webapp",
            "value": "$(webAppName).azurewebsites.net"
            }
          ]
          
    - publish: $(System.DefaultWorkingDirectory)/loadTest
      artifact: results
